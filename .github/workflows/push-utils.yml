name: Push Utilities
on:
  push:

permissions:
  contents: write

jobs:
  utils:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Hello world
        run: echo "Hello, world!"

      - name: Data e hora (UTC e São Paulo)
        env:
          TZ: America/Sao_Paulo
        run: |
          echo "UTC: $(date -u '+%Y-%m-%d %H:%M:%S')"
          echo "São Paulo: $(date '+%Y-%m-%d %H:%M:%S')"

      - name: Usuário do push
        run: |
          echo "github.actor = ${{ github.actor }}"
          echo "autor (últ. commit) = ${{ github.event.head_commit.author.name }}"

      - name: Calcular 2+2
        run: |
          x=$((2+2))
          echo "2+2 = $x"

      - name: Listar arquivos
        run: ls -la

      - name: Contar arquivos .html
        run: |
          count=$(find . -type f -name '*.html' | wc -l)
          echo "Total .html: $count"

      - name: Criar README se não existir
        run: |
          if [ ! -f README.md ]; then
            printf "# Meu Trabalho\n\nProjeto HTML/CSS/JS com GitHub Actions.\n" > README.md
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add README.md
            git commit -m "chore: cria README automático"
            git push
          else
            echo "README já existe."
          fi

      - name: Alertar arquivos >100KB (falha o job)
        run: |
          list=$(find . -type f -size +100k | sed 's#^\./##' || true)
          if [ -n "$list" ]; then
            echo "Arquivos >100KB encontrados:"
            echo "$list"
            exit 1
          else
            echo "Nenhum arquivo acima de 100KB."
          fi

      - name: Gerar lista de arquivos alterados neste push
        run: |
          BEFORE="${{ github.event.before }}"
          AFTER="${{ github.sha }}"
          if [ -z "$BEFORE" ] || [ "$BEFORE" = "0000000000000000000000000000000000000000" ]; then
            git diff --name-only "$AFTER~1" "$AFTER" | sed '/^$/d' > changed_files.txt || true
          else
            git diff --name-only "$BEFORE" "$AFTER" | sed '/^$/d' > changed_files.txt || true
          fi
          echo "Arquivos alterados:"
          cat changed_files.txt || true

      - name: Sequência html -> css -> js
        run: |
          if [ ! -s changed_files.txt ]; then
            echo "Nenhum arquivo alterado."
            exit 0
          fi
          awk '
            /\.html$/ {if (state==0) state=1}
            /\.css$/  {if (state==1) state=2}
            /\.js$/   {if (state==2) state=3}
            END {print (state==3? "Sequência OK (html->css->js)":"Sem sequência")}
          ' changed_files.txt

      - name: Contagem sem sequência
        run: |
          html=$(grep -E '\.html$' changed_files.txt | wc -l || true)
          css=$(grep -E '\.css$'  changed_files.txt | wc -l || true)
          js=$(grep -E '\.js$'    changed_files.txt | wc -l || true)
          echo "Alterados (qualquer ordem): HTML=$html CSS=$css JS=$js"
